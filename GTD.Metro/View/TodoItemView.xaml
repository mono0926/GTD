<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="Mono.App.GTD.View.TodoItemView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Mono.App.GTD.View"
    xmlns:common="using:Mono.App.GTD.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:conv="using:Mono.App.GTD.Common"
    xmlns:vm="using:Mono.App.GTD.ViewModel"
    mc:Ignorable="d">
    <common:LayoutAwarePage.BottomAppBar>
        <AppBar HorizontalContentAlignment="Stretch" Height="88" VerticalContentAlignment="Stretch" Foreground="{StaticResource AppBarItemForegroundThemeBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Height="84" Style="{StaticResource DiscardAppBarButtonStyle}" VerticalAlignment="Top" Command="{Binding DeleteTodoItemCommand}"/>
                </StackPanel>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <Button Style="{StaticResource PhotoAppBarButtonStyle}" Command="{Binding CapturePhotoCommand}"/>
                    <Button Style="{StaticResource VideoAppBarButtonStyle}" Command="{Binding CaptureVideoCommand}" />
                    <Button Style="{StaticResource AddAppBarButtonStyle}" Command="{Binding AddTodoItemCommand}"/>
                </StackPanel>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.BottomAppBar>

    <Page.Resources>
        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Page.Resources>
    <!--<Page.DataContext>
        <vm:TodoItemViewModel />
    </Page.DataContext>-->
    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <Grid Grid.Column="1" Margin="0,0,30,0" VerticalAlignment="Bottom">
                <Button x:Name="pageTitle"
            		Content="{Binding Title}"  FontSize="42"
            		Style="{StaticResource TextBlockButtonStyle}" VerticalAlignment="Bottom"
                        Command="{Binding EditCommand}"/>
                <Popup IsOpen="{Binding IsOpenEdit}" Margin="0,60,0,0">
                    <Border Background="#FFE5E5E5" Padding="5">
                        <StackPanel Background="#FFE5E5E5">
                            <TextBox HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="{Binding TitleCandidate, Mode=TwoWay}"    VerticalAlignment="Top" FontSize="28"/>
                            <TextBlock TextWrapping="Wrap" Text="Description" Foreground="{StaticResource AppBarBackgroundThemeBrush}" FontSize="{StaticResource ControlContentThemeFontSize}"/>
                            <TextBox TextWrapping="Wrap" Text="{Binding DescriptionCandidate, Mode=TwoWay}"  VerticalAlignment="Top"/>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                </Grid.ColumnDefinitions>
                                <Button Content="OK" HorizontalAlignment="Stretch"
                                    BorderBrush="{StaticResource AppBarBackgroundThemeBrush}"
                                    Foreground="{StaticResource AppBarBackgroundThemeBrush}"
                                    Command="{Binding EditSubmitCommand}" />
                                <Button Content="Cancel" HorizontalAlignment="Stretch" Grid.Column="1"
                                    BorderBrush="{StaticResource AppBarBackgroundThemeBrush}"
                                    Foreground="{StaticResource AppBarBackgroundThemeBrush}"
                                    Command="{Binding EditCancelCommand}" />
                            </Grid>
                        </StackPanel>
                    </Border>
                </Popup>
            </Grid>
        </Grid>
        <Grid Row="1" Margin="116,0,40,46">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <ListView ItemsSource="{Binding Items}"
                            SelectedItem="{Binding Current, Mode=TwoWay}"
                           ItemTemplate="{StaticResource TodoItemsDataTemplate}"/>
            <ScrollViewer Grid.Column="1">
                <StackPanel>
                    <TextBox
                                    Text="{Binding Current.Title, Mode=TwoWay}" Margin="10,0,10,10" FontSize="26.667" />

                    <TextBlock TextWrapping="Wrap" Text="Description" FontSize="{StaticResource ControlContentThemeFontSize}"/>
                    <TextBox
                                    Text="{Binding Current.Description, Mode=TwoWay}" Margin="10,0,10,10" />

                    <StackPanel  Orientation="Horizontal" Margin="0,0,0,10">

                        <TextBlock TextWrapping="Wrap" Text="Due" MinWidth="80" FontSize="{StaticResource ControlContentThemeFontSize}"/>
                        <TextBox   Text="{Binding Current.Due, Mode=TwoWay}"  />
                    </StackPanel>
                    <ToggleSwitch   IsOn="{Binding Current.IsStar, Mode=TwoWay}" Margin="0,0,0,10" Header="" OffContent="Not Star" OnContent="Star" />

                    <StackPanel  Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Project" MinWidth="80" FontSize="{StaticResource ControlContentThemeFontSize}" />

                        <ComboBox ItemsSource="{Binding ProjectWithInbox}" SelectedItem="{Binding Current.Project, Mode=TwoWay}"
                               HorizontalAlignment="Left" DisplayMemberPath="Title" />

                    </StackPanel>
                    <StackPanel  Orientation="Horizontal" Margin="0,0,0,10">
                        <TextBlock Text="Context" MinWidth="80" FontSize="{StaticResource ControlContentThemeFontSize}" />

                        <ComboBox ItemsSource="{Binding Contexts}" x:Name="ContextsBox"
                               HorizontalAlignment="Left" DisplayMemberPath="Title" />
                        <Button  Style="{StaticResource AddButtonStyle}" Command="{Binding AddContextCommand}"
                             CommandParameter="{Binding SelectedItem, ElementName=ContextsBox}"/>
                        <ItemsControl ItemsSource="{Binding Current.Contexts}" ItemTemplate="{StaticResource ItemContextsDataTemplate}" >
                        </ItemsControl>
                    </StackPanel>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="80" />
                            <ColumnDefinition Width="400" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Media" MinWidth="80" FontSize="{StaticResource ControlContentThemeFontSize}" />
                        <StackPanel Grid.Column="1">
                            <GridView  x:Name="Images"  ItemsSource="{Binding Images}" HorizontalAlignment="Stretch"  SelectionChanged="Images_SelectionChanged_1">
                                <GridView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapGrid Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </GridView.ItemsPanel>
                                <GridView.ItemTemplate>
                                    <DataTemplate>
                                        <Image Source="{Binding}" Width="120" Height="80" />
                                    </DataTemplate>
                                </GridView.ItemTemplate>
                            </GridView>
                            <GridView x:Name="Videos" ItemsSource="{Binding Videos}" SelectionChanged="Videos_SelectionChanged_1">
                                <GridView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapGrid Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </GridView.ItemsPanel>
                                <GridView.ItemTemplate>
                                    <DataTemplate>
                                        <MediaElement Width="120" Height="80" Source="{Binding}" />
                                        <!--< MediaPlayer Source="{Binding}" />-->
                                    </DataTemplate>
                                </GridView.ItemTemplate>
                            </GridView>
                        </StackPanel>
                        <Image Source="{Binding SelectedItem, ElementName=Images}"   HorizontalAlignment="Left"  Grid.Column="2"
                               Visibility="{Binding IsImageVisible, Converter={StaticResource BooleanToVisibilityConverter}}"                               />
                        <MediaElement Source="{Binding SelectedItem, ElementName=Videos}"   HorizontalAlignment="Left"  Grid.Column="2"
                               Visibility="{Binding IsVideoVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </Grid>
                    <TextBlock Text="Location" />

                </StackPanel>
            </ScrollViewer>
        </Grid>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

    </Grid>
</common:LayoutAwarePage>